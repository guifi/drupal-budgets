<?php
/**
 * @file
 * Install, update and uninstall functions for the budgets module.
 */

function budgets_schema() {

  $schema['budgets'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'budget_status' => array (
        'type' => 'varchar',
        'length' => '15',
        'not null' => false,
        'default' => 'Preparation',
      ),
      'budget_type' => array (
        'type' => 'varchar',
        'length' => '15',
        'not null' => true,
        'default' => 'crowdfunding',
        'comment' => 'CAPEX/OPEX-crowdfunding',
      ),
      'priority' => array (
        'type' => 'varchar',
        'length' => '15',
        'not null' => true,
        'default' => 'unknown',
        'comment' => 'Priority (None/Urgent/Normal/Minor)',
      ),
      'supplier_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
        'comment' => 'Foreign key to supplier',
      ),
      'ticket_link' => array (
        'type' => 'varchar',
        'length' => '100',
        'comment' => 'If exists, link to whatever causes the expense, i.e. ticket maintenance...',
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => false,
      ),
      'promoter' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'payment_instructions' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'terms' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'accdate' => array (
        'type' => 'int',
        'not null' => false,
        'disp-width' => '11',
      ),
      'expires' => array (
        'type' => 'int',
        'not null' => true,
        'disp-width' => '11',
        'default' => 0,
      ),
      'node_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
        'comment' => 'Foreign key to guifi_node',
      ),
      'zone_id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'comment' => 'Foreign key to guifi_zone',
      ),
      'currency_txt' => array (
        'type' => 'varchar',
        'length' => '10',
        'not null' => false,
      ),
      'currency_symbol' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
      ),
      'min_contribution' => array (
        'type' => 'numeric',
        'not null' => true,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'max_contribution' => array (
        'type' => 'numeric',
        'not null' => false,
        'default' => 50000,
        'precision' => '20',
        'scale' => '2',
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'budgets',
    'name' => 'budgets',
  );

  $schema['budget_funds'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'budget_id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'contributor_name' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'contributor_telf' => array (
        'type' => 'varchar',
        'length' => '64',
        'not null' => false,
      ),
      'contributor_email' => array (
        'type' => 'varchar',
        'length' => '64',
        'not null' => false,
      ),
      'fund_status' => array (
        'type' => 'varchar',
        'length' => '20',
        'not null' => false,
        'default' => 'Submitted',
      ),
      'date' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'disp-width' => '11',
      ),
      'amount' => array (
        'type' => 'numeric',
        'not null' => true,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'comments' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'budget_id',
      1 => 'id',
    ),
    'module' => 'budgets',
    'name' => 'budget_funds',
  );

  $schema['budget_items'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'budget_id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'title' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
        'default' => '',
        'comment' => 'item title',
      ),
      'description' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'comments' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'quantity' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'tax' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
        'default' => 0,
      ),
      'cost' => array (
        'type' => 'numeric',
        'not null' => true,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'weight' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'budget_id',
      1 => 'id',
    ),
    'module' => 'budgets',
    'name' => 'budget_items',
  );

  $schema['supplier'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'disp-width' => '10',
      ),
      'zone_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to guifi_zone',
      ),
      'zones' => array (
        'type' => 'varchar',
        'length' => '256',
        'not null' => true,
        'comment' => 'Foreign key of zones where the supplier is available',
      ),
      'title' => array (
        'type' => 'varchar',
        'length' => 60,
        'not null' => true,
        'default' => '',
        'comment' => 'item title',
      ),
      'frating' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
      ),
      'wrating' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
      ),
      'urating' => array (
        'type' => 'numeric',
        'not null' => false,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'code' => array (
        'type' => 'varchar',
        'length' => 5,
        'not null' => true,
        'comment' => 'to be used for building part numbers, abbreviations, etc',
      ),
      'address1' => array (
        'type' => 'varchar',
        'length' => '256',
        'not null' => true,
      ),
      'address2' => array (
        'type' => 'varchar',
        'length' => '256',
        'not null' => false,
      ),
      'postal_code' => array (
        'type' => 'varchar',
        'length' => '20',
        'not null' => true,
      ),
      'city' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'region' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => false,
      ),
      'country' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => false,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'phone' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'logo' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => false,
      ),
      'web_url' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => false,
      ),
      'role' => array (
        'type' => 'varchar',
        'length' => '15',
        'default' => 'volunteer',
        'not null' => true,
        0 => 'volunteer, professional',
      ),
      'tax_code' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'default_tax_rate' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => true,
        'default' => 0,
      ),
      'guifi_certs' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'tp_certs' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'other_certs' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'caps_services' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'caps_network' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'caps_project' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'other_caps' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'self_rating' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
        'default' => '~~',
      ),
      'official_rating' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
        'default' => '~~',
      ),
      'user_rating' => array (
        'type' => 'numeric',
        'not null' => false,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'accounting_urls' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'ack' => array (
        'type' => 'varchar',
        'length' => '1',
        'not null' => false,
        'default' => '0',
        'comment' => 'Terms acknoledgement',
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'budgets',
    'name' => 'supplier',
  );

  $schema['supplier_quote'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'supplier_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
        'comment' => 'Foreign key to guifi_zone',
      ),
      'partno' => array (
        'type' => 'varchar',
        'length' => 60,
        'not null' => true,
        'default' => '',
        'comment' => 'item title',
      ),
      'title' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
        'default' => '',
        'comment' => 'item title',
      ),
      'cost' => array (
        'type' => 'numeric',
        'not null' => true,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'tax' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
        'default' => 0,
      ),
      'expires' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'budgets',
    'name' => 'supplier_quote',
  );

  return $schema;
}

function budgets_install() {

  /*
   *  budget_status
   */
  $budget_status = array(
    array(
      'id' => '1',
      'type' => 'budget_status',
      'text' => 'Preparation',
      'description' => 'Preparation - Private (Not visible)',
      'relations' => 'crowdfunding|f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '2',
      'type' => 'budget_status',
      'text' => 'Planned',
      'description' => 'Planned - Published',
      'relations' => 'crowdfunding|f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '3',
      'type' => 'budget_status',
      'text' => 'Approved',
      'description' => 'Approved',
      'relations' => 'crowdfunding|none|other',
    ),
    array(
      'id' => '4',
      'type' => 'budget_status',
      'text' => 'Executed',
      'description' => 'Executed - For Compensation',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '5',
      'type' => 'budget_status',
      'text' => 'Review',
      'description' => 'Under review - Issues to be corrected',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '6',
      'type' => 'budget_status',
      'text' => 'Reviewed',
      'description' => 'Reviewed - To be Compensated',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '7',
      'type' => 'budget_status',
      'text' => 'Compensated',
      'description' => 'Compensated',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '8',
      'type' => 'budget_status',
      'text' => 'Open',
      'description' => 'Crowdfunding open',
      'relations' => 'crowdfunding|none|other',
    ),
    array(
      'id' => '9',
      'type' => 'budget_status',
      'text' => 'Closed',
      'description' => 'Closed',
      'relations' => 'crowdfunding|f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '10',
      'type' => 'budget_status',
      'text' => 'Abandoned',
      'description' => 'Abandoned',
      'relations' => 'crowdfunding|f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '11',
      'type' => 'budget_status',
      'text' => 'Executed_BAD',
      'description' => 'Executed - Bad practice',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '12',
      'type' => 'budget_status',
      'text' => 'Review_BAD',
      'description' => 'Under review - Bad practice',
      'relations' => '|f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '13',
      'type' => 'budget_status',
      'text' => 'Reviewed_BAD',
      'description' => 'Reviewed - Bad practice',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
    array(
      'id' => '14',
      'type' => 'budget_status',
      'text' => 'Invoiced_BAD',
      'description' => 'Invoiced - Bad practice',
      'relations' => 'f-capex|f-opex|f-conn|w-opex|w-capex|none|other',
    ),
  );
  $query = db_insert('guifi_types')->fields(array(
             'id',
             'type',
             'text',
             'description',
             'relations',
           ));
  foreach ($budget_status as $record) {
    $query->values($record);
  }
  $query->execute();


  /*
   *  budget_type
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('0', 'budget_type', 'other', 'Other expenses', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'budget_type', 'none', 'None', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'budget_type', 'crowdfunding', 'Crowdfunding', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'budget_type', 'w-capex', 'Wireless-CAPEX', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'budget_type', 'w-opex', 'Wireless-OPEX', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5', 'budget_type', 'f-capex', 'Fiber-CAPEX', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('6', 'budget_type', 'f-opex', 'Fiber-OPEX', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('7', 'budget_type', 'f-conn', 'Fiber Conn financed', NULL)");

  /*
   * 3th part certs (tp_certs)
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'tp_certs', 'ISP', 'NRA Registered - ISP Provider', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'tp_certs', 'TIProf', 'TI Builder', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'tp_certs', 'TPEng', 'TI Engineering', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'tp_certs', 'VWorks', 'Trained on Vertical works', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5', 'tp_certs', 'LRisks', 'Trained on Labour Risks', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('6', 'tp_certs', 'CDIns', 'Civil Damage Insurance', NULL)");

  /*
   * guifi_certs
   */
  db_query("DELETE FROM {guifi_types} WHERE type in ('guifi_certs')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1',  'guifi_certs', 'Commons','Comuns XOLN Compliance', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2',  'guifi_certs', 'BEthics', 'Bussiness Practices & Ethics Compliance', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3',  'guifi_certs', 'BPractices','Best Practices Compliance', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4',  'guifi_certs', 'PoPIX-Part','PoPIX Participant agreement', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5',  'guifi_certs', 'PoPIX-Mgmt','PoP-IX Management Agreement', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('6',  'guifi_certs', 'AEconomics','Economic Activity Agreement', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('7',  'guifi_certs', 'AVolunteer','Volunteer Agreement', 'volunteer')");

  /*
   * skills
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'skills', 0,'No', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'skills', 1,'Yes, but no experience yet', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'skills', 2,'Subcontracting', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'skills', 3,'Yes, some experience', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5', 'skills', 4,'Yes, experienced', NULL)");
  /*
   * caps_services
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'caps_services', 'isp','Internet Service Provider (ISP)',
  		'As a professional service. To share Internet is not an ISP Service')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'caps_services', 'voip','Telephony (VoIP) Provider',
  		'As a professional service.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'caps_services', 'mobile','Mobile Provider',
  		'As a professional service.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'caps_services', 'iptv','TV (IpTv) Provider',
  		'As a professional service.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5', 'caps_services', 'surv','Surveillance',
  		'As a professional service.')");
  /*
   * caps_network
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'caps_network', 'wprovider','Wifi Equipment Provider',
  		'As a professional activity.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'caps_network', 'wbuilder','Wifi Installer', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'caps_network', 'wmgmt','Wifi Mantainer', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'caps_network', 'fprovider','Fibre Optics Equipment Provider',
  		'As a professional activity.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('5', 'caps_network', 'fbuilder','Fibre Optics Installer', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('6', 'caps_network', 'fmgmt','Fibre Optics Mantainer', NULL)");
  /*
   * caps_project
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'caps_project', 'pduct','Civil works / Ducting',
  		'As a professional activity.')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'caps_project', 'peng', 'Project Engineering', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'caps_project', 'pmgmt','Project Management', NULL)");
  /*
   * Ratings
   */
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'commitment_rate', 'A','A-Totally commited, priority to the Commons, ', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'commitment_rate', 'B','B-Case by case, depending on circumstances', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'commitment_rate', 'C','C-General provider. No special commitment', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'commitment_rate', '~','Not rated', NULL)");

  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'experience_rate', 'A','A-Main activity and above the average experience', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'experience_rate', 'B','B-Some experience or up to the average', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'experience_rate', 'C','C-None or few experience, willing to start', NULL)");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'experience_rate', '~','Not rated', NULL)");

  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('1', 'budget_priority', 'unknown' , 'Unknown', 'YES')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('2', 'budget_priority', 'urgent', 'Urgent', 'YES')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('3', 'budget_priority', 'normal', 'Normal', 'YES')");
  db_query("INSERT INTO {guifi_types} (id, type, text, description, relations) VALUES ('4', 'budget_priority', 'minor', 'Minor', NULL)");


}

function budgets_uninstall() {
  drupal_uninstall_schema('budgets');

  variable_del('budget_block_title');
  variable_del('budget_payment');
  variable_del('budget_terms');
  variable_del('budget_expires');
  variable_del('budget_currency_symbol');
  variable_del('budget_currency_txt');
  variable_del('budget_minimum');
  variable_del('budget_block_title');
  variable_del('budget_currency_long');
}
//


?>
